#version: '3.8'

services:
  nginx:
    image: nginx:1.28.0-bookworm
    container_name: nginx-webserver-m
    ports:
      - "80:80"
    volumes:
      - "./nginx/conf.d:/etc/nginx/conf.d"
      - "./Animes-Geek/:/var/www/html"
    depends_on:
      - web
      - api
    networks:
      - webnet
      - app_net

  web:
    build:
      context: "./php"
      dockerfile: Dockerfile
    image: my-php-fpm:8.2
    pull_policy: build
    container_name: php-fpm-m
    volumes:
      - "./Animes-Geek/:/var/www/html"
    networks:
      - webnet
    depends_on:
      - db

  api:
    build:
      context: "./API_node"
      dockerfile: Dockerfile
    image: api_node:2.0-alpha
    pull_policy: build
    container_name: api_node_m
    ports:
      - "3000:3000"
    volumes:
      - "./API_node/:/app"

      - "node_modules:/app/node_modules"
    restart: always
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://root:sua_senha@db:5432/banco_post?sslmode=disable
    networks:
      - app_net
    depends_on:
       db:
          condition: service_healthy

  db:
    image: postgres:14.18-bookworm
    container_name: db-postgre
    hostname: db-server
    ports:
      - "5432:5432"
    volumes:
      - "./init-postgres.sql:/docker-entrypoint-initdb.d/init.sql"
      - "postgres_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: sua_senha
      POSTGRES_DB: banco_post
    networks:
      - webnet
      - app_net
    healthcheck:
         test: ["CMD-SHELL", "pg_isready -U root -d banco_post"]
         interval: 5s
         timeout: 5s
         retries: 5
         start_period: 10s

networks:
  webnet:
    driver: bridge
  app_net:
    driver: bridge
volumes:
  postgres_data:
    driver: local

  node_modules:
    driver: local
